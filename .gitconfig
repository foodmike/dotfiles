[user]
	name = Mike Mahoney
	email = mike.mahoney@fluxdata.com
[core]
	editor = vim
	autocrlf = input
	excludesfile = /c/Users/mike.mahoney/.gitignore_global
	hooksPath = C:/Users/mike.mahoney/.cmake/git/hooks
[branch]
	autosetuprebase = always
[push]
	default = simple
	recurseSubmodules = check
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[diff]
	submodule = log
[alias]
	last = log -l HEAD
	branches = branch --list
	br = branch 
  st = status
  co = checkout
  dev = checkout devel
  tags = tag -l
  wipe = clean -fdx -e *.user -e *.suo -e config*json -e config*lua -e *.pem
  wipen = clean -fdxn -e *.user -e *.suo -e config*json -e config*lua -e *.pem
  last = log --name-status -1 HEAD
  info = remote show origin
  head = rev-parse --abbrev-ref HEAD
  sm = submodule

  # Pretty graph logging from http://stackoverflow.com/questions/1838873/visualizing-branch-topology-in-git/34467298#34467298
  
  gr = log --graph --decorate --all --date=short --format=format:'%C(bold magenta)%h%C(reset)%C(auto)%d%C(reset): %C(white)%s%C(reset) %C(green)- %an%C(reset)%C(dim green), %cd%C(reset)'

  lg = !"git lg1"
  lg1 = !"git lg1-specific --all"
  lg2 = !"git lg2-specific --all"
  lg3 = !"git lg3-specific --all"

  lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
  lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
  lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
